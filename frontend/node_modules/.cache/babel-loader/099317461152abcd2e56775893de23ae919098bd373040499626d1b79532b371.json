{"ast":null,"code":"var _jsxFileName = \"E:\\\\ScrambleP\\\\Scramble-Puzzle\\\\frontend\\\\src\\\\components\\\\ImageSelectionModal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './ImageSelectionModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSelectionModal = ({\n  images,\n  onClose,\n  onSelectImage\n}) => {\n  _s();\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [onClose]);\n  const formatImageName = imagePath => {\n    const filename = imagePath.split('/').pop();\n    const nameWithoutExtension = filename.split('.')[0];\n    const withSpaces = nameWithoutExtension.replace(/_/g, ' ');\n    return withSpaces.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-selection-modal-overlay\",\n    onClick: onClose,\n    \"aria-modal\": \"true\",\n    role: \"dialog\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-selection-modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        \"aria-label\": \"Close Modal\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose Your Puzzle Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-grid\",\n        children: images.map((imagePath, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"image-grid-item\",\n          onClick: () => onSelectImage(index),\n          \"aria-label\": `Select Image: ${formatImageName(imagePath)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imagePath,\n            alt: `Puzzle option: ${formatImageName(imagePath)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formatImageName(imagePath)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageSelectionModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ImageSelectionModal;\nexport default ImageSelectionModal;\nvar _c;\n$RefreshReg$(_c, \"ImageSelectionModal\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","ImageSelectionModal","images","onClose","onSelectImage","_s","handleKeyDown","e","key","window","addEventListener","removeEventListener","formatImageName","imagePath","filename","split","pop","nameWithoutExtension","withSpaces","replace","map","word","charAt","toUpperCase","slice","join","className","onClick","role","tabIndex","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","index","src","alt","_c","$RefreshReg$"],"sources":["E:/ScrambleP/Scramble-Puzzle/frontend/src/components/ImageSelectionModal.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './ImageSelectionModal.css';\r\n\r\nconst ImageSelectionModal = ({ images, onClose, onSelectImage }) => {\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [onClose]);\r\n\r\n  const formatImageName = (imagePath) => {\r\n    const filename = imagePath.split('/').pop();\r\n    const nameWithoutExtension = filename.split('.')[0];\r\n    const withSpaces = nameWithoutExtension.replace(/_/g, ' ');\r\n    return withSpaces\r\n      .split(' ')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(' '); \r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"image-selection-modal-overlay\"\r\n      onClick={onClose}\r\n      aria-modal=\"true\"\r\n      role=\"dialog\"\r\n      tabIndex={-1}\r\n    >\r\n      <div\r\n        className=\"image-selection-modal-content\"\r\n        onClick={(e) => e.stopPropagation()} \r\n      >\r\n        <button className=\"close-button\" onClick={onClose} aria-label=\"Close Modal\">\r\n          &times;\r\n        </button>\r\n        <h2>Choose Your Puzzle Image</h2>\r\n        <div className=\"image-grid\">\r\n          {images.map((imagePath, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"image-grid-item\"\r\n              onClick={() => onSelectImage(index)}\r\n              aria-label={`Select Image: ${formatImageName(imagePath)}`}\r\n            >\r\n              <img\r\n                src={imagePath}\r\n                alt={`Puzzle option: ${formatImageName(imagePath)}`}\r\n              />\r\n              <p>{formatImageName(imagePath)}</p>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSelectionModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAClEP,SAAS,CAAC,MAAM;IACd,MAAMQ,aAAa,GAAIC,CAAC,IAAK;MAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,QAAQ,EAAE;QACtBL,OAAO,CAAC,CAAC;MACX;IACF,CAAC;IACDM,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACjD,OAAO,MAAMG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,aAAa,CAAC;EACnE,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,MAAMS,eAAe,GAAIC,SAAS,IAAK;IACrC,MAAMC,QAAQ,GAAGD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;IAC3C,MAAMC,oBAAoB,GAAGH,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnD,MAAMG,UAAU,GAAGD,oBAAoB,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IAC1D,OAAOD,UAAU,CACdH,KAAK,CAAC,GAAG,CAAC,CACVK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CACzDC,IAAI,CAAC,GAAG,CAAC;EACd,CAAC;EAED,oBACEzB,OAAA;IACE0B,SAAS,EAAC,+BAA+B;IACzCC,OAAO,EAAExB,OAAQ;IACjB,cAAW,MAAM;IACjByB,IAAI,EAAC,QAAQ;IACbC,QAAQ,EAAE,CAAC,CAAE;IAAAC,QAAA,eAEb9B,OAAA;MACE0B,SAAS,EAAC,+BAA+B;MACzCC,OAAO,EAAGpB,CAAC,IAAKA,CAAC,CAACwB,eAAe,CAAC,CAAE;MAAAD,QAAA,gBAEpC9B,OAAA;QAAQ0B,SAAS,EAAC,cAAc;QAACC,OAAO,EAAExB,OAAQ;QAAC,cAAW,aAAa;QAAA2B,QAAA,EAAC;MAE5E;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnC,OAAA;QAAA8B,QAAA,EAAI;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCnC,OAAA;QAAK0B,SAAS,EAAC,YAAY;QAAAI,QAAA,EACxB5B,MAAM,CAACkB,GAAG,CAAC,CAACP,SAAS,EAAEuB,KAAK,kBAC3BpC,OAAA;UAEE0B,SAAS,EAAC,iBAAiB;UAC3BC,OAAO,EAAEA,CAAA,KAAMvB,aAAa,CAACgC,KAAK,CAAE;UACpC,cAAY,iBAAiBxB,eAAe,CAACC,SAAS,CAAC,EAAG;UAAAiB,QAAA,gBAE1D9B,OAAA;YACEqC,GAAG,EAAExB,SAAU;YACfyB,GAAG,EAAE,kBAAkB1B,eAAe,CAACC,SAAS,CAAC;UAAG;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,eACFnC,OAAA;YAAA8B,QAAA,EAAIlB,eAAe,CAACC,SAAS;UAAC;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAT9BC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUJ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAxDIJ,mBAAmB;AAAAsC,EAAA,GAAnBtC,mBAAmB;AA0DzB,eAAeA,mBAAmB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}